Object subclass: #Command	instanceVariableNames: 'commandWord arguments'	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!Command commentStamp: 'CDavidShaffer 2/3/2023 16:58' prior: 0!A command has a keyword (#commandWord) and a collection of 0 or more arguments.  For example, the string 'go west' corresponds to the commandWord 'go' and an arguments list of #('west').!!Command methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 16:57'!arguments: anObject	arguments := anObject! !!Command methodsFor: 'executing' stamp: 'CDavidShaffer 2/3/2023 17:37'!executeInGame: aGame	self subclassResponsibility! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Command class	instanceVariableNames: ''!!Command class methodsFor: 'instance creation' stamp: 'CDavidShaffer 2/3/2023 17:54'!parse: aString	| tokens commandClass |	tokens := aString substrings: ' '.	commandClass := self allSubclasses		                detect: [ :each | each commandWord = tokens first ]		                ifNone: [ InvalidCommand ].	^ commandClass new		 		  arguments: tokens allButFirst;		  yourself! !Object subclass: #Game	instanceVariableNames: 'player'	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!Game commentStamp: 'CDavidShaffer 2/3/2023 16:59' prior: 0!An adventure game.  I start the player in a given location and can execute commands.!!Game methodsFor: 'command execution' stamp: 'CDavidShaffer 2/3/2023 17:38'!executeCommand: aCommand	^aCommand executeInGame: self! !!Game methodsFor: 'command execution' stamp: 'CDavidShaffer 2/3/2023 17:38'!go: aDirection	player go: aDirection.	^player look! !!Game methodsFor: 'command execution' stamp: 'CDavidShaffer 2/3/2023 17:39'!look	^player look! !!Game methodsFor: 'command execution' stamp: 'CDavidShaffer 2/3/2023 18:00'!invalidCommand	^'Invalid command'! !!Game methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 17:02'!initializeStartLocation: aLocation	player := Player location: aLocation! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Game class	instanceVariableNames: ''!!Game class methodsFor: 'sample games' stamp: 'CDavidShaffer 2/2/2023 18:02'!skyrim	| riverwoodSouth riverwoodNorth riverwoodTrader |	riverwoodSouth := Location new		                  description: 'South end of Riverwood';		                  yourself.	riverwoodNorth := Location new		                  description: 'North end of Riverwood';		                  yourself.	riverwoodTrader := Location new		                   description:			                   'The Riverwood Trader.  Sell all of your useless gear here!!';		                   yourself.	riverwoodSouth		addExit: riverwoodNorth direction: 'north';		addExit: riverwoodTrader direction: 'east'.	riverwoodNorth addExit: riverwoodSouth direction: 'south'.	riverwoodTrader addExit: riverwoodSouth direction: 'out'.	^ self startLocation: riverwoodSouth! !!Game class methodsFor: 'instance creation' stamp: 'CDavidShaffer 2/2/2023 17:01'!startLocation: aLocation	^self new initializeStartLocation: aLocation! !Command subclass: #GoCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!GoCommand commentStamp: 'CDavidShaffer 2/3/2023 17:41' prior: 0!The go command.!!GoCommand methodsFor: 'executing' stamp: 'CDavidShaffer 2/3/2023 17:54'!executeInGame: aGame	^ aGame go: arguments first! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GoCommand class	instanceVariableNames: ''!!GoCommand class methodsFor: 'accessing' stamp: 'CDavidShaffer 2/3/2023 17:19'!commandWord	^'go'! !Command subclass: #InvalidCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!InvalidCommand commentStamp: 'CDavidShaffer 2/3/2023 17:42' prior: 0!I correspond to an invalid command (one whose command word is not understood).!!InvalidCommand methodsFor: 'executing' stamp: 'CDavidShaffer 2/3/2023 18:00'!executeInGame: aGame	^aGame invalidCommand! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!InvalidCommand class	instanceVariableNames: ''!!InvalidCommand class methodsFor: 'accessing' stamp: 'CDavidShaffer 2/3/2023 17:21'!commandWord	^'invalid'! !Object subclass: #Location	instanceVariableNames: 'exits description'	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!Location commentStamp: 'CDavidShaffer 2/2/2023 16:31' prior: 0!A location in the game world.  Has exits each with a unique direction associated with them.!!Location methodsFor: 'accessing' stamp: 'CDavidShaffer 2/2/2023 16:38'!description	^ description! !!Location methodsFor: 'accessing' stamp: 'CDavidShaffer 2/2/2023 16:38'!description: anObject	description := anObject! !!Location methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 16:34'!initialize	super initialize.	exits := Dictionary new.! !!Location methodsFor: 'exits' stamp: 'CDavidShaffer 2/2/2023 18:08'!exitNames	^ exits keys asSet! !!Location methodsFor: 'exits' stamp: 'CDavidShaffer 2/2/2023 16:35'!exitInDirection: aDirection	^exits at: aDirection	! !!Location methodsFor: 'exits' stamp: 'CDavidShaffer 2/2/2023 16:35'!addExit: anExit direction: aDirection	exits at: aDirection put: anExit	! !Command subclass: #LookCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!LookCommand commentStamp: 'CDavidShaffer 2/3/2023 17:42' prior: 0!The look command.!!LookCommand methodsFor: 'executing' stamp: 'CDavidShaffer 2/3/2023 17:38'!executeInGame: aGame	^aGame look! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LookCommand class	instanceVariableNames: ''!!LookCommand class methodsFor: 'accessing' stamp: 'CDavidShaffer 2/3/2023 17:20'!commandWord	^'look'! !Object subclass: #Player	instanceVariableNames: 'location'	classVariableNames: ''	package: 'CPSC3220-Adventure-Core'!!Player commentStamp: 'CDavidShaffer 2/2/2023 16:46' prior: 0!I am a player with a location and...!!Player methodsFor: 'private' stamp: 'CDavidShaffer 2/3/2023 17:06'!describeExitsOn: wslocation exitNames		ifEmpty: [ ws nextPutAll: 'No exits' ]		ifNotEmpty: [ 			ws				nextPutAll: 'Exits:';				cr.			location exitNames				do: [ :e | ws nextPutAll: e ]				separatedBy: [ ws nextPutAll: ', ' ] ].! !!Player methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 16:47'!initializeLocation: aLocation	location := aLocation.	! !!Player methodsFor: 'actions' stamp: 'CDavidShaffer 2/2/2023 16:52'!go: aDirection	location := location exitInDirection: aDirection! !!Player methodsFor: 'actions' stamp: 'CDavidShaffer 2/3/2023 17:06'!look	| ws |	ws := String new writeStream.	ws		nextPutAll: location description;		cr;		cr.	self describeExitsOn: ws.	^ ws contents! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Player class	instanceVariableNames: ''!!Player class methodsFor: 'instance creation' stamp: 'CDavidShaffer 2/2/2023 16:47'!location: aLocation	^self new initializeLocation: aLocation! !SpPresenter subclass: #GamePresenter	instanceVariableNames: 'commandTextInput commandTextOutput game'	classVariableNames: ''	package: 'CPSC3220-Adventure-SpecUI'!!GamePresenter commentStamp: 'CDavidShaffer 2/3/2023 17:08' prior: 0!Primary Pharo user interface for text-based adventure games.!!GamePresenter methodsFor: 'initialization' stamp: 'CDavidShaffer 2/3/2023 17:14'!defaultLayout	layout := SpBoxLayout newTopToBottom.	layout		spacing: 5;		add: commandTextInput withConstraints: [ :c | c height: 40 ];		add: commandTextOutput.	^ layout! !!GamePresenter methodsFor: 'initialization' stamp: 'CDavidShaffer 2/3/2023 17:10'!initializeWindow: aWindow	super initializeWindow: aWindow.	aWindow title: 'Skyrim'.	aWindow aboutText: 'A great game!!'.! !!GamePresenter methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 17:56'!initializePresenters	super initializePresenters.	commandTextInput := self newTextInput		                    placeholder: 'Enter your command';		                    yourself.	commandTextInput whenSubmitDo: [:t |		self commandEntered: t].	commandTextOutput := self newText! !!GamePresenter methodsFor: 'initialization' stamp: 'CDavidShaffer 2/2/2023 18:03'!initialize	super initialize.	game := Game skyrim! !!GamePresenter methodsFor: 'actions' stamp: 'CDavidShaffer 2/3/2023 17:16'!commandEntered: aString	| result |	result := game executeCommand: (Command parse: aString).	commandTextOutput text:		 result , String cr , String cr ,  commandTextOutput text.	commandTextInput text: ''! !PackageManifest subclass: #ManifestCPSC3220Adventure	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Manifest'!!ManifestCPSC3220Adventure commentStamp: 'CDavidShaffer 2/3/2023 16:59' prior: 0!An text-based adventure game framework.!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestCPSC3220Adventure class	instanceVariableNames: ''!!ManifestCPSC3220Adventure class methodsFor: 'code-critics' stamp: 'CDavidShaffer 2/3/2023 17:02'!ruleReGuardClauseRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Game #executeCommand: #false)) #'2023-02-03T17:02:31.899303-05:00') )! !!ManifestCPSC3220Adventure class methodsFor: 'code-critics' stamp: 'CDavidShaffer 2/3/2023 17:02'!ruleGuardingClauseRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Game #executeCommand: #false)) #'2023-02-03T17:02:26.712693-05:00') )! !